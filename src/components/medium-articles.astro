---

import { useEffect, useState } from 'react';
import yaml from 'js-yaml';

const mediumChannelName = 'shipping-intel';
const mediumRssFeedUrl = `https://medium.com/feed/${mediumChannelName}`;
const corsProxy = 'https://api.allorigins.win/get?url=';

// Function to fetch and parse Medium RSS feed using the proxy
async function fetchMediumArticles() {
  try {
    const response = await fetch(`${corsProxy}${encodeURIComponent(mediumRssFeedUrl)}`);
    if (!response.ok) {
        throw new Error('Network response was not ok');
    }
    
    const data = await response.json();

    // Parse the RSS feed XML data
    const parser = new DOMParser();
    const xmlDoc = parser.parseFromString(data.contents, "application/xml");


    // Get the items (articles) from the feed
    const items = xmlDoc.getElementsByTagName('item');
    const articles = [];

    // Iterate through the items and extract article information
    for (let i = 0; i < items.length; i++) {
        const item = items[i];

        // Helper function to get text content safely
        const getTextContent = (tagName) => {
                    const element = item.getElementsByTagName(tagName)[0];
                    return element && element.childNodes.length > 0 ? element.childNodes[0].nodeValue : element.textContent;
                };

        const title = getTextContent('title');
        const link = getTextContent('link');
        const pubDate = getTextContent('pubDate');
        const category = getTextContent('category');
        const content = getTextContent('content:encoded');

        articles.push({
          title, 
          link, 
          pubDate, 
          category, 
          content
        });
    }

      // Convert articles array to YAML
      const yamlString = jsyaml.dump(articles);

      // Log the articles to the console
      console.log(yamlString);
    } catch (error) {
      console.error('Error fetching Medium articles:', error);
    }
}

---
